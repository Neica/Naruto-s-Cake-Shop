
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author neicasain
 */
public class Naruto_Cake extends javax.swing.JFrame {

    /**
     * Creates new form Naruto_Cake
     */
    public Naruto_Cake() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReceipt = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        VelvetButton = new javax.swing.JRadioButton();
        VanillaButton = new javax.swing.JRadioButton();
        ChocoButton = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        ButterButton = new javax.swing.JRadioButton();
        WippedButton = new javax.swing.JRadioButton();
        CheeseButton = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        SprinklesButton = new javax.swing.JRadioButton();
        FruitButton = new javax.swing.JRadioButton();
        CookiesButton = new javax.swing.JRadioButton();
        MarshButton = new javax.swing.JRadioButton();
        noneButton = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        SquareButton = new javax.swing.JRadioButton();
        CircleButton = new javax.swing.JRadioButton();
        TierButton = new javax.swing.JRadioButton();
        tierTxt = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDesign = new javax.swing.JTextPane();
        exitButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        finalizeButton = new javax.swing.JButton();
        clrButton = new javax.swing.JButton();
        receiptButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSub = new javax.swing.JTextField();
        txtTax = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/neicasain/Downloads/cake.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(238, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(210, 210, 210))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 810, 60));

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/neicasain/Downloads/menu.png")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 90, 30));

        jScrollPane1.setViewportView(txtReceipt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 90, 400, 450));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)), "Cakes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ninja Naruto", 0, 13), new java.awt.Color(255, 0, 0))); // NOI18N

        VelvetButton.setText("Uchiha Red Velvet");
        VelvetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VelvetButtonActionPerformed(evt);
            }
        });

        VanillaButton.setText("Hyuga Vanilla");
        VanillaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VanillaButtonActionPerformed(evt);
            }
        });

        ChocoButton.setText("Uzumaki Chocolate");
        ChocoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChocoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VelvetButton)
                    .addComponent(VanillaButton)
                    .addComponent(ChocoButton))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(VelvetButton)
                .addGap(18, 18, 18)
                .addComponent(VanillaButton)
                .addGap(15, 15, 15)
                .addComponent(ChocoButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 240, 140));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)), "Icing/Frosting", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ninja Naruto", 0, 13), new java.awt.Color(255, 0, 0))); // NOI18N

        ButterButton.setText("Butter Cream Icing");
        ButterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButterButtonActionPerformed(evt);
            }
        });

        WippedButton.setText("Wipped Cream Frosting");
        WippedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WippedButtonActionPerformed(evt);
            }
        });

        CheeseButton.setText("Cream Cheese Frosting");
        CheeseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheeseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButterButton)
                    .addComponent(WippedButton)
                    .addComponent(CheeseButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WippedButton)
                .addGap(12, 12, 12)
                .addComponent(CheeseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 200, 120));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)), "Special Toppings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ninja Naruto", 0, 13), new java.awt.Color(255, 0, 0))); // NOI18N

        SprinklesButton.setText("Sprinkles");
        SprinklesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SprinklesButtonActionPerformed(evt);
            }
        });

        FruitButton.setText("Fresh Fruit");
        FruitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FruitButtonActionPerformed(evt);
            }
        });

        CookiesButton.setText("Cookies");
        CookiesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CookiesButtonActionPerformed(evt);
            }
        });

        MarshButton.setText("Marshmallows");
        MarshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarshButtonActionPerformed(evt);
            }
        });

        noneButton.setText("None");
        noneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SprinklesButton)
                    .addComponent(FruitButton)
                    .addComponent(CookiesButton)
                    .addComponent(MarshButton)
                    .addComponent(noneButton))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(SprinklesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FruitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CookiesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MarshButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noneButton)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 240, 180));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)), "Shape", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ninja Naruto", 0, 13), new java.awt.Color(255, 0, 0))); // NOI18N

        SquareButton.setText("Square");
        SquareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SquareButtonActionPerformed(evt);
            }
        });

        CircleButton.setText("Circle");
        CircleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CircleButtonActionPerformed(evt);
            }
        });

        TierButton.setText("Tier");
        TierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TierButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SquareButton)
                    .addComponent(CircleButton)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(TierButton)
                        .addGap(18, 18, 18)
                        .addComponent(tierTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SquareButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CircleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TierButton)
                    .addComponent(tierTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 270, 110));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)), "Shopping Cart", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ninja Naruto", 0, 13), new java.awt.Color(255, 0, 0))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Shape", "Cake", "Frosting", "Topping"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 450, 170));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)), "Decoration/Design", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ninja Naruto", 0, 13), new java.awt.Color(255, 0, 0))); // NOI18N

        jScrollPane2.setViewportView(txtDesign);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, 200, 160));

        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 440, 130, 40));

        addButton.setText("ADD TO CART");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 280, 130, 40));

        finalizeButton.setText("FINALIZE ORDER");
        finalizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(finalizeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 320, 130, 40));

        clrButton.setText("CLEAR ALL");
        clrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clrButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, 130, 40));

        receiptButton.setText("RECEIPT");
        receiptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptButtonActionPerformed(evt);
            }
        });
        getContentPane().add(receiptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, 130, 40));

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));

        jLabel3.setText("SubTotal");

        jLabel4.setText("Tax");

        jLabel5.setText("Total");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)))
                        .addGap(100, 100, 100)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTax, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(txtTotal)
                            .addComponent(txtSub))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 510, 340, 120));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VanillaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VanillaButtonActionPerformed
        // this allows the user to only choose 1 of the cakes.
        
        if(VanillaButton.isSelected()){
            VelvetButton.setSelected(false);
            ChocoButton.setSelected(false);
        }
    }//GEN-LAST:event_VanillaButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // this method assigned the price of every item and their names that should be display in the shopping cart table.
        
        if(VanillaButton.isSelected()){
             cake = "Hyuga Vanilla";
             subtotal += 49.99;
        }
        else if(VelvetButton.isSelected()){
            cake = "Uchiha Red Velvet";
            subtotal += 54.95;
        }
        else if(ChocoButton.isSelected()){
            cake = "Uzumaki Chocolate";
            subtotal += 52.95;
        }
        
        if(ButterButton.isSelected()){
            frosting = "Butter Cream Icing";
            subtotal += 17.99;
        }
        else if(WippedButton.isSelected()){
            frosting = "Wipped Cream Frosting";
            subtotal += 12.99;
        }
        else if(CheeseButton.isSelected()){
            frosting = "Cream Cheese Frosting";
            subtotal += 15.95;
        }
        
        if(CircleButton.isSelected()){
            shape = "Circle";
            subtotal += 15.99;
        }
        else if(SquareButton.isSelected()){
            shape = "Square";
            subtotal += 16.99;
        }
        else if(TierButton.isSelected()){
            try{
                
                tier_input = tierTxt.getText();
                quantity = Integer.parseInt(tier_input);
                shape = "Tier: " + quantity;
                subtotal += quantity * 17.99;
            }catch(NumberFormatException e){
                 JOptionPane.showMessageDialog(this, "Please Enter an Integer for the number of tiers.");
                 shape = "";
            }
        }
        
         if(SprinklesButton.isSelected()){
             toppings = "Sprinkles ";
             subtotal += 5.95;
         }
         else if(FruitButton.isSelected()){
             toppings = "Fresh Fruit ";
             subtotal += 10.99;
         }
         else if(CookiesButton.isSelected()){
             toppings = "Cookies ";
             subtotal += 9.95;
         }
         else if(MarshButton.isSelected()){
             toppings = "Marshmallows ";
             subtotal += 11.99;
         }
         else if(noneButton.isSelected()){
             toppings = "None";
             subtotal += 0.00;
         }
         
        if(cake.isEmpty() || frosting.isEmpty() || shape.isEmpty() || toppings.isEmpty()){
            JOptionPane.showMessageDialog(this, "Some Items have not been selected.");
            receiptButton.setSelected(false);
        }
        else{
             model = (DefaultTableModel) jTable1.getModel();
             model.addRow(new Object[] {shape,cake, frosting, toppings} );
             JOptionPane.showMessageDialog(this, "Items Added.");
             
             receipt_order_summarry.add(shape + "  ");
             receipt_order_summarry.add(cake + "  ");
             receipt_order_summarry.add(frosting + "  "); 
             receipt_order_summarry.add(toppings);
             receipt_order_summarry.add("\n");
        }
        
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void finalizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizeButtonActionPerformed
        /* 
               this display the subtotal, tax and total and 
               if cake, frosting, etc are empty disables the receipt button. 
               Lastly when the finalized button is clicked, 
               the user wont be allowed to use the clear all button and the add to cart button.
                       */
        
         DecimalFormat d =new DecimalFormat("##0.00");
         
        tax = subtotal * saleTax;
        total = subtotal + tax;
        txtSub.setText(Double.toString(subtotal));
        txtTax.setText(Double.toString(tax));
        txtTotal.setText(Double.toString(total));
        
        txtSub.setText(d.format(subtotal));
        txtTax.setText(d.format(tax));
        txtTotal.setText(d.format(total));
        
        if(shape.isEmpty() || cake.isEmpty() || frosting.isEmpty() || toppings.isEmpty()){
            JOptionPane.showMessageDialog(this, "No items have been selected.");
            receiptButton.setEnabled(false);
            txtSub.setText("");
            txtTax.setText("");
            txtTotal.setText("");
        }
        else{
             receiptButton.setEnabled(true);
        clrButton.setEnabled(false);
        addButton.setEnabled(false);
        }
        
      
    }//GEN-LAST:event_finalizeButtonActionPerformed

    private void clrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrButtonActionPerformed
        // this clears every button, text area, totals and shopping cart table.
        
         VelvetButton.setSelected(false);
        VanillaButton.setSelected(false);
        ChocoButton.setSelected(false);
        ButterButton.setSelected(false);
        WippedButton.setSelected(false);
        CheeseButton.setSelected(false);
        CircleButton.setSelected(false);
        SquareButton.setSelected(false);
        TierButton.setSelected(false);
        SprinklesButton.setSelected(false);
        
        MarshButton.setSelected(false);
        CookiesButton.setSelected(false);
        FruitButton.setSelected(false);
        
        txtSub.setText("");
        txtTax.setText("");
        txtTotal.setText("");
        txtDesign.setText("");
        tierTxt.setText("");
        
 
        receipt_order_summarry.clear();
      
        receiptButton.setEnabled(false);
        cake = "";
        shape ="";
        frosting ="";
        toppings ="";
        
        subtotal = 0.0;
        tax = 0.0;
        total = 0.0;
        model.setRowCount(0);
        
    }//GEN-LAST:event_clrButtonActionPerformed

    private void receiptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptButtonActionPerformed
        
        /*
            this allows the user to view their receipt after they finish with their order,
            if they haven't select a cake, frosting, etc, they can't
            view their receipt. Once they have clicked the receipt button,
            they wont be able to click the "add to cart" button, "clear all" button and "finalize order" button, 
            they will have to click "exit" to get out of the program
                
                */
        
          Date date = new Date();
          Random rand = new Random();
          int r = 1+rand.nextInt(500000);
          
        if(cake.isEmpty() || shape.isEmpty() || frosting.isEmpty() || toppings.isEmpty()){
              JOptionPane.showMessageDialog(this, "You Haven't Select An Item Yet.");
               receiptButton.setEnabled(false);
        }
        else{
          txtReceipt.setText(txtReceipt.getText()+ "------------------------------------------------------" + "\n");
          txtReceipt.setText(txtReceipt.getText()+ "--                             Naruto's Cake Shop                           --\n");
          txtReceipt.setText(txtReceipt.getText()+ "***************************************************************" + "\n");
          txtReceipt.setText(txtReceipt.getText()+ date + "\n");
          
          txtReceipt.setText(txtReceipt.getText()+ "Tax Invoice # : "+ r + "\n");
          txtReceipt.setText(txtReceipt.getText()+ "\n");
          txtReceipt.setText(txtReceipt.getText()+ "Shape      " + "  Cake              " + "Icing      " + "      Toppings     " + "\n");
          txtReceipt.setText(txtReceipt.getText()+ "------------------------------------------------------" + "\n");
          for(int i = 0; i < receipt_order_summarry.size(); ++i){
                txtReceipt.setText(txtReceipt.getText()+ receipt_order_summarry.get(i));
           }
          
          txtReceipt.setText(txtReceipt.getText()+ "------------------------------------------------------\n");
          txtReceipt.setText(txtReceipt.getText()+ "Decoration/Design: " + txtDesign.getText() + "\n");
          txtReceipt.setText(txtReceipt.getText()+ "------------------------------------------------------\n");
          txtReceipt.setText(txtReceipt.getText()+ "                                                      SubTotal:     $ " + txtSub.getText() + "\n");
          txtReceipt.setText(txtReceipt.getText()+ "                                                      Tax:           $ " + txtTax.getText() + "\n");
          txtReceipt.setText(txtReceipt.getText()+ "                                                      Total:         $ " + txtTotal.getText() +"\n");
          txtReceipt.setText(txtReceipt.getText()+ "------------------------------------------------------\n");
          txtReceipt.setText(txtReceipt.getText()+ "\n\n" + "                            ***** THANK YOU *****  ");
          
          addButton.setEnabled(false);
          finalizeButton.setEnabled(false);
          clrButton.setEnabled(false);
          receiptButton.setEnabled(false);
        }
          
    }//GEN-LAST:event_receiptButtonActionPerformed

    private void VelvetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VelvetButtonActionPerformed
         // this allows the user to only choose 1 of the cakes.
        
        if(VelvetButton.isSelected()){
            VanillaButton.setSelected(false);
            ChocoButton.setSelected(false);
        }
    }//GEN-LAST:event_VelvetButtonActionPerformed

    private void ChocoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChocoButtonActionPerformed
        // this allows the user to only choose 1 of the cakes.
        
         if(ChocoButton.isSelected()){
            VanillaButton.setSelected(false);
            VelvetButton.setSelected(false);
        }
    }//GEN-LAST:event_ChocoButtonActionPerformed

    private void ButterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButterButtonActionPerformed
         // this allows the user to only choose 1 of the frostings.
        
        if(ButterButton.isSelected()){
            WippedButton.setSelected(false);
            CheeseButton.setSelected(false);
        }
    }//GEN-LAST:event_ButterButtonActionPerformed

    private void WippedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WippedButtonActionPerformed
         // this allows the user to only choose 1 of the frostings.
        
        if(WippedButton.isSelected()){
            ButterButton.setSelected(false);
            CheeseButton.setSelected(false);
        }
    }//GEN-LAST:event_WippedButtonActionPerformed

    private void CheeseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheeseButtonActionPerformed
         // this allows the user to only choose 1 of the frostings.
        
        if(CheeseButton.isSelected()){
            WippedButton.setSelected(false);
            ButterButton.setSelected(false);
        }
    }//GEN-LAST:event_CheeseButtonActionPerformed

    private void SquareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SquareButtonActionPerformed
         // this allows the user to only choose 1 of the shapes.
         if(SquareButton.isSelected()){
               CircleButton.setSelected(false);
               TierButton.setSelected(false);
            }
    }//GEN-LAST:event_SquareButtonActionPerformed

    private void CircleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CircleButtonActionPerformed
        // this allows the user to only choose 1 of the shapes.
        
         if(CircleButton.isSelected()){
               SquareButton.setSelected(false);
               TierButton.setSelected(false);
            }
    }//GEN-LAST:event_CircleButtonActionPerformed

    private void TierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TierButtonActionPerformed
        /*this allows the user to only choose 1 of the shapes and they get ask to enter
        how many tiers/layers they want if they click Tier as the shape.
        */
        
          if(TierButton.isSelected()){
               SquareButton.setSelected(false);
               CircleButton.setSelected(false);
               JOptionPane.showMessageDialog(this,"Please enter in the text field how many tier."); 
            }
    }//GEN-LAST:event_TierButtonActionPerformed

    private void SprinklesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SprinklesButtonActionPerformed
        // this allows the user to only choose 1 of the toppings.
        
        if(SprinklesButton.isSelected()){
            MarshButton.setSelected(false);
            CookiesButton.setSelected(false);
            FruitButton.setSelected(false);
            noneButton.setSelected(false);
        }
        
    }//GEN-LAST:event_SprinklesButtonActionPerformed

    private void FruitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FruitButtonActionPerformed
        // this allows the user to only choose 1 of the toppings.
        
         if(FruitButton.isSelected()){
            MarshButton.setSelected(false);
            CookiesButton.setSelected(false);
            SprinklesButton.setSelected(false);
            noneButton.setSelected(false);
        }
    }//GEN-LAST:event_FruitButtonActionPerformed

    private void CookiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CookiesButtonActionPerformed
        // this allows the user to only choose 1 of the toppings.
        
         if(CookiesButton.isSelected()){
            MarshButton.setSelected(false);
            SprinklesButton.setSelected(false);
            FruitButton.setSelected(false);
            noneButton.setSelected(false);
        }
    }//GEN-LAST:event_CookiesButtonActionPerformed

    private void MarshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarshButtonActionPerformed
        // this allows the user to only choose 1 of the toppings.
         if(MarshButton.isSelected()){
            SprinklesButton.setSelected(false);
            CookiesButton.setSelected(false);
            FruitButton.setSelected(false);
            noneButton.setSelected(false);
        }
    }//GEN-LAST:event_MarshButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // this allows the user to exit, they get to confirm yes or no if they really want to exit.
        
        int exitOption =  JOptionPane.showConfirmDialog(this, "Are You Sure You Want To Exit?", "EXIT", JOptionPane.YES_NO_OPTION);
        if(exitOption== JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_exitButtonActionPerformed

    private void noneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noneButtonActionPerformed
        // // this allows the user to only choose "none" for toppings.
        
        if(noneButton.isSelected()){
            SprinklesButton.setSelected(false);
            CookiesButton.setSelected(false);
            FruitButton.setSelected(false);
            MarshButton.setSelected(false);
        }
        
    }//GEN-LAST:event_noneButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Naruto_Cake.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Naruto_Cake.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Naruto_Cake.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Naruto_Cake.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Naruto_Cake().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ButterButton;
    private javax.swing.JRadioButton CheeseButton;
    private javax.swing.JRadioButton ChocoButton;
    private javax.swing.JRadioButton CircleButton;
    private javax.swing.JRadioButton CookiesButton;
    private javax.swing.JRadioButton FruitButton;
    private javax.swing.JRadioButton MarshButton;
    private javax.swing.JRadioButton SprinklesButton;
    private javax.swing.JRadioButton SquareButton;
    private javax.swing.JRadioButton TierButton;
    private javax.swing.JRadioButton VanillaButton;
    private javax.swing.JRadioButton VelvetButton;
    private javax.swing.JRadioButton WippedButton;
    private javax.swing.JButton addButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton clrButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton finalizeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton noneButton;
    private javax.swing.JButton receiptButton;
    private javax.swing.JTextField tierTxt;
    private javax.swing.JTextPane txtDesign;
    private javax.swing.JTextPane txtReceipt;
    private javax.swing.JTextField txtSub;
    private javax.swing.JTextField txtTax;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
private String cake = "";
private String frosting="";
private String toppings="";
String tier_input ="";
private String shape = "";
private String num = "";
private String num1 = "";
DefaultTableModel model; 
int quantity = 0;
ArrayList<String> receipt_order_summarry = new ArrayList<String>();
double tax;
double saleTax = 0.06;
double subtotal = 0.00;
double total = 0.00;
}
